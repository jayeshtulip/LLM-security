apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-model-secure
  namespace: production
  labels:
    app: ml-model
    environment: production
spec:
  replicas: 3  # High availability
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: ml-model
      environment: production
  template:
    metadata:
      labels:
        app: ml-model
        environment: production
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000" 
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: ml-model-sa-production
      
      # Production-grade security context
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 3000
        fsGroup: 2000
        seccompProfile:
          type: RuntimeDefault
      
      # Pod anti-affinity for high availability
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values: ["ml-model"]
              topologyKey: kubernetes.io/hostname
      
      containers:
      - name: ml-model
        image: ghcr.io/your-org/ml-model:latest
        imagePullPolicy: Always
        
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 3000
          readOnlyRootFilesystem: true
          capabilities:
            drop: [ALL]
        
        ports:
        - containerPort: 8000
          name: http
        
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: LOG_LEVEL
          value: "INFO"
        - name: API_KEY
          valueFrom:
            secretKeyRef:
              name: ml-model-secrets-production
              key: api-key
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: ml-model-secrets-production
              key: database-url
        
        # Production resource limits
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        
        volumeMounts:
        - name: tmp-volume
          mountPath: /tmp
        - name: model-cache
          mountPath: /app/model_cache
          readOnly: true
        
        # Production health checks
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 3
        
        startupProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
      
      volumes:
      - name: tmp-volume
        emptyDir: {}
      - name: model-cache
        configMap:
          name: model-files-production
      
      terminationGracePeriodSeconds: 60